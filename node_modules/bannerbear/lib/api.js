"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const node_fetch_1 = __importDefault(require("node-fetch"));
class Api {
    headers;
    baseUrl;
    constructor(defaultHeaders, url) {
        this.headers = defaultHeaders;
        this.baseUrl = url;
    }
    async get(url) {
        try {
            const response = await (0, node_fetch_1.default)(`${this.baseUrl}${url}`, { method: 'GET', headers: this.headers });
            if (!response.ok) {
                throw new Error("HTTP error " + response.status);
            }
            const json = await response.json();
            return json;
        }
        catch (err) {
            throw err;
        }
    }
    async patch(url, params = {}) {
        try {
            const response = await (0, node_fetch_1.default)(`${this.baseUrl}${url}`, { method: 'PATCH', body: JSON.stringify(params), headers: this.headers });
            if (!response.ok) {
                throw new Error("HTTP error " + response.status);
            }
            const json = await response.json();
            return json;
        }
        catch (err) {
            throw err;
        }
    }
    async post(url, params = {}) {
        try {
            const response = await (0, node_fetch_1.default)(`${this.baseUrl}${url}`, { method: 'POST', body: JSON.stringify(params), headers: this.headers });
            if (!response.ok) {
                throw new Error("HTTP error " + response.status);
            }
            const json = await response.json();
            return json;
        }
        catch (err) {
            throw err;
        }
    }
}
exports.default = Api;
